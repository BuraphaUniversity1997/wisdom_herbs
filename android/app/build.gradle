def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    // throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.burapha.wisdom_herbs"
    compileSdkVersion = 34
    // ndkVersion = "25.1.8937393"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    aaptOptions {//เพิ่มแล้วสามารถเล่น video ได้ ป้องกันไม่ให้บีบอัดไฟล์ 
        noCompress 'tflite', 'mp4', 'res', 'resource', 'obb'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.burapha.wisdom_herbs"
        minSdkVersion 28  // >= unity minSdk in player settings
        targetSdkVersion 34
        versionCode 2
        versionName '1.0.2'
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            signingConfig = signingConfigs.release
            // signingConfig signingConfigs.debug
        }
        // debug {
        //     signingConfig signingConfigs.debug
        // }
        // profile {
        //     signingConfig signingConfigs.debug
        // }
        // innerTest {
        //     matchingFallbacks = ['debug', 'release']
        // }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation project(':unityLibrary')
    implementation 'androidx.appcompat:appcompat:1.6.1'
}
